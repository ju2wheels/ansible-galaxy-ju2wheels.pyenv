---

- name: Manage pyenv git dependencies
  become: true
  loop_control:
    loop_var: pyenv_git_dependency
  apk:
    name:         "{{ pyenv_git_dependency }}"
    state:        "{{ pyenv_git_dependencies_state }}"
    update_cache: "{{ pyenv_git_dependencies[hostvars[inventory_hostname].ansible_distribution].package_manager.update_cache | default(omit) }}"
  register: pyenv_git_dependencies_status
  with_items: "{{ pyenv_git_dependencies[hostvars[inventory_hostname].ansible_distribution].packages }}"
  when: >
    hostvars[inventory_hostname].ansible_distribution == 'Alpine' and
    pyenv_git_dependencies is mapping and
    pyenv_git_dependencies[hostvars[inventory_hostname].ansible_distribution] is mapping and
    pyenv_git_dependencies[hostvars[inventory_hostname].ansible_distribution].package_manager is mapping and
    pyenv_git_dependencies[hostvars[inventory_hostname].ansible_distribution].packages is iterable and
    pyenv_git_dependencies_state is defined
  tags:
    - dependencies
    - git
